p.df <- as.data.frame(p.df)
colnames(p.df) <- c('cib.rel','cib.abs','xcell','ebm')
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
for (i in 1:4) {print(sum(p.df[,i] < 0.05/10000))}
for (i in 1:4) {print(sum(p.df[,i] < 5e-8))}
p.df
nsim=1000
p.df <- matrix(NA,nsim,4)
G <- df[,ncol(df)]
for (j in 1:nsim) {
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.df[j,] <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
}
p.df <- as.data.frame(p.df)
colnames(p.df) <- c('cib.rel','cib.abs','xcell','ebm')
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
for (i in 1:4) {print(sum(p.df[,i] < 0.05/10000))}
for (i in 1:4) {print(sum(p.df[,i] < 5e-8))}
i=1
df <- df.geno[[i]]
# actual
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.df[j,] <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
# print('Running sped up pre-calculated covariance matrix method...')
p.real <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
p.real
nsim=1000
p.df <- matrix(NA,nsim,4)
G <- df[,ncol(df)]
for (j in 1:nsim) {
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.df[j,] <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
}
p.df <- as.data.frame(p.df)
colnames(p.df) <- c('cib.rel','cib.abs','xcell','ebm')
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
for (i in 1:4) {print(sum(p.df[,i] < 0.05/10000))}
for (i in 1:4) {print(sum(p.df[,i] < 5e-8))}
min(p.df)
p.df
# actual
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.real <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
p.real
# actual
df <- df.geno[[i]]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.real <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
nsim=10000
p.real
df <- df.geno[[i]]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.real <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
p.real
# actual
df <- df.geno[[i]]
# actual
i=1
df <- df.geno[[i]]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.real <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
p.real
nsim=10000
p.df <- matrix(NA,nsim,4)
G <- df[,ncol(df)]
for (j in 1:nsim) {
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.df[j,] <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
}
p.df <- as.data.frame(p.df)
colnames(p.df) <- c('cib.rel','cib.abs','xcell','ebm')
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
for (i in 1:4) {print(sum(p.df[,i] < 0.05/10000))}
for (i in 1:4) {print(sum(p.df[,i] < 5e-8))}
p.df[1,]
p.df[1,]
p.df[,1]
p.df
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
cov.matrix
)
cor(df[,-1])
cor(df[,-1])
cor(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cor(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cor(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cor(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cor(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
cov(Y.df)
colnames(df.geno[[i]])[2] <- 'resid'
colnames(df.geno[[i]])[ncol(df.geno[[i]])] <- 'genotype'
A1[[i]] <- strsplit(snp[[i]],'_')[[1]][3]
A2[[i]] <- strsplit(snp[[i]],'_')[[1]][4]
i=1
colnames(df.geno[[i]])[2] <- 'resid'
colnames(df.geno[[i]])[ncol(df.geno[[i]])] <- 'genotype'
A1[[i]] <- strsplit(snp[[i]],'_')[[1]][3]
A2[[i]] <- strsplit(snp[[i]],'_')[[1]][4]
g.geno[[i]] <- ggplot(df.geno[[i]],aes(x=as.factor(genotype),y=resid,fill=as.factor(genotype))) + geom_boxplot(na.rm = T,outlier.shape = NA) + geom_jitter(width=0.1,alpha=0.1) +
labs(x=rs[[i]],y=phenoName[[i]]) + #,title=tis[[i]]) +
theme_bw() +
theme(legend.position="none",plot.title = element_text(hjust=0.5)) +
theme(panel.grid.minor=element_blank(),panel.grid.major = element_blank()) +
scale_fill_manual(values=c("#CC6666", "#9999CC", "#66CC99")) +
scale_x_discrete(labels=c(paste0(A1[[i]],A1[[i]]),paste0(A1[[i]],A2[[i]]),paste0(A2[[i]],A2[[i]])))
g.geno
p.df[which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4]),]
p.df[which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4]),]
p.df[which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4]),]
p.df[c(which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4])),]
c(which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4]))
0.05/10000
nsim=10000
p.df <- matrix(NA,nsim,4)
G <- df[,ncol(df)]
for (j in 1:nsim) {
if (j %%100 == 0) {print(j)}
i <- sample(1:nrow(df),size = nrow(df),replace = F)
df[,2:(ncol(df)-1)] <- df[i,2:(ncol(df)-1)]
Y.df <- df[,2:(ncol(df)-1)]
# cov(Y.df)
p <- rep(NA,3)
for (k in 1:3) {
mod <- (lm(Y.df[,k] ~ G))
p[k] <- summary(mod)$coef[2,4]
}
df.pheno2 <- as.data.frame(t(Y.df))
cov.matrix <- EmpiricalBrownsMethod:::calculateCovariances(df.pheno2)
# print('Running sped up pre-calculated covariance matrix method...')
p.df[j,] <- c(p,
empiricalBrownsMethod2(data_matrix = Y.df,p_values = p,extra_info = F,covar_matrix = cov.matrix)
)
}
p.df <- as.data.frame(p.df)
colnames(p.df) <- c('cib.rel','cib.abs','xcell','ebm')
for (i in 1:4) {print(sum(p.df[,i] < 0.05))}
for (i in 1:4) {print(sum(p.df[,i] < 0.05/10000))}
for (i in 1:4) {print(sum(p.df[,i] < 5e-8))}
p.df[c(which.min(p.df[,1]),which.min(p.df[,2]),which.min(p.df[,3]),which.min(p.df[,4])),]
0.05/10000
p.real
source('~/Documents/Research/GTEx/Infiltration/GTEx_infil/scripts/HotCold_Cluster/hot_tissueSpecific.R')
df <- fread('/Users/andrewmarderstein/Documents/Research/GTEx/Infiltration/GTEx_infil/output/HotCold_Cluster/hot_tissueSpecific_quintile.R',data.table = F,stringsAsFactors = F); colnames(df)[which(colnames(df)=='ID')] <- 'IID'
df <- fread('/Users/andrewmarderstein/Documents/Research/GTEx/Infiltration/GTEx_infil/output/HotCold_Cluster/ConsensusQuintileAssignments-FullSecond.txt',data.table = F,stringsAsFactors = F); colnames(df)[which(colnames(df)=='ID')] <- 'IID'
head(df)
tail(df)
df$IID <- as.character(lapply(strsplit(df$Sample,"\\."),function(x) paste(x[1:2],collapse = "-")))
df$Top <- as.numeric(df$Infiltration%in%c('Top','Second'))
df <- fread('/Users/andrewmarderstein/Documents/Research/GTEx/Infiltration/GTEx_infil/output/HotCold_Cluster/ConsensusQuintileAssignments-FullSecond.txt',data.table = F,stringsAsFactors = F); colnames(df)[which(colnames(df)=='ID')] <- 'IID'
df$IID <- as.character(lapply(strsplit(df$Sample,"\\."),function(x) paste(x[1:2],collapse = "-")))
df$Top <- as.numeric(df$Infiltration%in%c('Top','Second'))
df$Infiltration
df$Top <- as.numeric(df$Quartile%in%c('Top','Second'))
head(df)
head(df,20)
tail(df,20)
# df$Top <- as.numeric(df$Infiltration=='Hot')
# df$Bottom <- as.numeric(df$Infiltration=='Cold')
# df$Intermediate <- as.numeric(df$Infiltration=='Intermediate')
CellType.unique <- unique(df$CellType)
CellType.names <- c("CD4 memory T cells",'Macrophages','Mast cells','Myeloid cells','Monocytes','Lymphocytes','CD8 T cells',
'B cells','Dendritic cells','Helper T cells','Neutrophils','NK cells')
# 1 #############
# create density plots (supplement)
g <- list();dataf <- list();val <- list();val2 <- list()
# 2 #############
# create bar plots (supplement)
g <- list();dataf <- list();val <- list();val2 <- list()
df.sub <- subset(df,CellType==CellType.unique[i]); #unique(df.sub$Tissue)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=as.integer(Sum))) +
geom_bar(fill='orange3') +
labs(x='Number of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.unique[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() +
theme(plot.title=element_text(hjust=0.5)) +
scale_x_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
g[[i]]
i
i=3
df.sub <- subset(df,CellType==CellType.unique[i]); #unique(df.sub$Tissue)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=as.integer(Sum))) +
geom_bar(fill='orange3') +
labs(x='Number of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.unique[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() +
theme(plot.title=element_text(hjust=0.5)) +
scale_x_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
i=2
df.sub <- subset(df,CellType==CellType.unique[i]); #unique(df.sub$Tissue)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=as.integer(Sum))) +
geom_bar(fill='orange3') +
labs(x='Number of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.unique[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() +
theme(plot.title=element_text(hjust=0.5)) +
scale_x_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
g[[i]]
# 2 #############
# create bar plots (supplement)
g <- list();dataf <- list();val <- list();val2 <- list()
for (i in 1:7) {
df.sub <- subset(df,CellType==CellType.unique[i]); #unique(df.sub$Tissue)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=as.integer(Sum))) +
geom_bar(fill='orange3') +
labs(x='Number of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.unique[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() +
theme(plot.title=element_text(hjust=0.5)) +
scale_x_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
}
plot_grid(g[[1]],g[[2]],g[[3]],g[[4]],
g[[5]],g[[6]],g[[7]],nrow=2)
tail(dataf)
tail(df)
mean(as.numeric(val))
val
as.numeric(lapply(dataf,function(x) {median(x$N)}))
g <- list();dataf <- list();val <- list();val2 <- list()
for (i in 1:7) {
df.sub <- subset(df,CellType==CellType.unique[i])
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),mean)
colnames(tab) <- c('IID','Mean')
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Mean>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Mean)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=Mean)) +
geom_density(fill='orange3') +
geom_vline(xintercept = val[[i]],col='red',lty='dashed') +
labs(x='Proportion of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.names[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() + scale_x_continuous(breaks=c(0,0.25,0.5,0.75,1),limits = c(-0.1,1.1)) +
theme(plot.title=element_text(hjust=0.5))
}
library(cowplot)
plot_grid(g[[1]],g[[2]],g[[3]],g[[4]],
g[[5]],g[[6]],g[[7]],nrow=2)
mean(as.numeric(val))
as.numeric(lapply(dataf,function(x) {median(x$N)}))
CellType.unique
val
mean(as.numeric(val))
as.numeric(val)
g <- list();dataf <- list();val <- list();val2 <- list()
for (i in 1:7) {
df.sub <- subset(df,CellType==CellType.unique[i]); #unique(df.sub$Tissue)
tab <- aggregate(df.sub$Top,by=list(df.sub$IID),sum)
tab2 <- aggregate(df.sub$Top,by=list(df.sub$IID),length)
colnames(tab) <- c('IID','Sum')
colnames(tab2) <- c('IID','N')
tab <- merge(tab,tab2,by='IID')
tab <- subset(tab,Sum>0 & N >= 8)
dataf[[i]] <- as.data.frame(tab)
val[[i]] <- median(dataf[[i]]$Sum)
val2[[i]] <- median(dataf[[i]]$N)
g[[i]] <- ggplot(dataf[[i]],aes(x=as.integer(Sum))) +
geom_bar(fill='orange3') +
labs(x='Number of "hot" tissue samples',y='Number of individuals',title=paste0(CellType.unique[i],' (N=',length(unique(df.sub$Tissue)),'; n=',val2[[i]],')'))+
theme_bw() +
theme(plot.title=element_text(hjust=0.5)) +
scale_x_continuous(breaks = function(x) unique(floor(pretty(seq(0, (max(x) + 1) * 1.1)))))
}
plot_grid(g[[1]],g[[2]],g[[3]],g[[4]],
g[[5]],g[[6]],g[[7]],nrow=2)
mean(as.numeric(val))
as.numeric(val)
# create clustered heatmaps
for (i in 1:7) {
df.sub <- subset(df,CellType==CellType.unique[i])
x <- aggregate(df.sub$IID,list(df.sub$IID),length)
df.sub <- subset(df.sub,x >= 8)
df.sub <- df.sub[,c('IID','Tissue','Top')]
library(reshape2)
df.sub.2 <- dcast(df.sub,IID~Tissue)
df.sub.3 <- melt(df.sub.2,id.vars = 'IID',na.rm = F)
colnames(df.sub.3) <- c('IID','Tissue','Top')
df.sub.3$Top[which(is.na(df.sub.3$Top))] <- 0
df.sub.4 <- dcast(df.sub.3,IID~Tissue)
rownames(df.sub.4) <- df.sub.4[,1]; df.sub.4 <- df.sub.4[,-1]
df.sub.5 <- as.data.frame(t(df.sub.4))
x <- apply(df.sub.5,2,sum); df.sub.5 <- df.sub.5[,-which(x==0)]
f <- paste0('/Users/andrewmarderstein/Documents/Research/GTEx/Infiltration/GTEx_infil/output/HotCold_Cluster/TissueHotHeatMap.',CellType.unique[i],'.png')
x <-3; p <- pheatmap(df.sub.5,cluster_cols = F,cluster_rows=T,show_colnames = F,
legend=F,treeheight_row = 50, treeheight_col = 0,border_color='black',
cellwidth = rel(1.2*x),cellheight=rel(4*x),filename=f)
}
p
